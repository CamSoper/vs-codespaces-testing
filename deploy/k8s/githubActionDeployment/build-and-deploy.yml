name: eShop build & deploy

on:
  push:
    branches: [ develop ]
  pull_request:
    branches: [ develop ]

env:
  IMAGE_NAME: webspa
  TAG: linux-latest
  CONTEXT_PATH: module-05-devops
  DOCKER_FILE_PATH: src/Web/WebSPA/Dockerfile
  CHART_PATH: deploy/k8s/helm-simple/webspa
  CLUSTER_NAME: YOUR_CLUSTER_NAME
  CLUSTER_RESOURCE_GROUP: YOUR_RESOURCE_GROUP_NAME
  IP_ADDRESS: YOUR_CLUSTER_IP

jobs:
  
  build-and-push-docker-image:
    runs-on: ubuntu-latest
    steps:
          
      - name: Get code from the repo
        uses: actions/checkout@v1
        with:
          ref: develop  
      
      - name: Build and push Docker images
        uses: docker/build-push-action@v1.1.0
        with:
          username: ${{ secrets.REGISTRY_USERNAME }}
          password:  ${{ secrets.REGISTRY_PASSWORD }}
          registry: ${{ secrets.REGISTRY_LOGIN_SERVER }}
          path:  ${{ env.CONTEXT_PATH }}
          dockerfile: ${{ format('{0}/{1}', env.CONTEXT_PATH , env.DOCKER_FILE_PATH ) }}
          repository:  ${{ env.IMAGE_NAME }}
          tags: ${{ env.TAG }}
          push: true

  deploy-to-aks:
      needs: [build-and-push-docker-image]
      runs-on: ubuntu-latest
      steps:
        - name: Azure Kubernetes set context
          uses: Azure/aks-set-context@v1
          with:
           creds: ${{ secrets.AZURE_CREDENTIALS }} 
           resource-group: ${{env.CLUSTER_RESOURCE_GROUP}}
           cluster-name: ${{env.CLUSTER_NAME}}
           
        - name: Get code from the repo
          uses: actions/checkout@v1
          with:
           ref: develop
        
        - name: Helm tool installer
          uses: Azure/setup-helm@v1
          
        - name: Azure Login
          uses: Azure/login@v1.1
          with:
           creds: ${{ secrets.AZURE_CREDENTIALS }} 
        
        - name: Deploy
          run: |
            az acr login --name ${{ secrets.REGISTRY_LOGIN_SERVER }}
            helm delete eshoplearn-webspa
            helm install eshoplearn-webspa --namespace=default --set registry=${{ secrets.REGISTRY_LOGIN_SERVER }} --set imagePullPolicy=Always --set host=${{env.IP_ADDRESS}} --set protocol=http ${{ format('{0}/{1}', env.CONTEXT_PATH , env.CHART_PATH ) }}
        
        
